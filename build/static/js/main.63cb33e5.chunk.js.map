{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"gNAMaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACFC,IAAMC,IALpB,kDAK6B,CACjCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MARI,sCAGY,uBACjBC,EADiB,EACjBA,KADiB,kBAUjBA,GAViB,2CAAH,sDCgDVC,G,MAjDH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPV,EADO,KACAW,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,KAIRC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACG,UAAVc,EAAEC,IADK,gCAEYjB,EAAaC,GAFzB,OAEDQ,EAFC,OAIPK,EAAWL,GACXG,EAAS,IALF,2CAAH,sDASZ,OACE,sBAAKM,UAAU,iBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QACnCG,WAAYT,IAGbF,EAAQY,MACP,sBAAKP,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,qCAAQL,EAAQa,KAAhB,OACA,oCAAOb,EAAQc,IAAIC,cAErB,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,4CAEF,sBAAKb,UAAU,OAAf,UACE,qBACEA,UAAU,YACVc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WACHC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAG5B,4BAAItB,EAAQA,QAAQ,GAAGsB,yB,eC1CnCC,EAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63cb33e5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"cdda71cd9d88cbf3506b1825fe50f491\";\r\n\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const {data} = await (axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY\r\n            \r\n        }\r\n    }));\r\n\r\n    return data; \r\n} ","import React, {useState} from 'react';\r\n\r\nimport { fetchWeather }from './api/fetchWeather';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            const data = await fetchWeather(query);\r\n\r\n            setWeather(data);\r\n            setQuery('');\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"main-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search\"\r\n          placeholder=\"search..\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          onKeyPress={search}\r\n        ></input>\r\n\r\n        {weather.main && (\r\n          <div className=\"city\">\r\n            <h2 className=\"city-name\">\r\n              <span> {weather.name} </span>\r\n              <sup> {weather.sys.country}</sup>\r\n            </h2>\r\n            <div className=\"city-temp\">\r\n              {Math.round(weather.main.temp)}\r\n              <sup> &deg;C</sup>\r\n            </div>\r\n            <div className=\"info\">\r\n              <img\r\n                className=\"city-icon\"\r\n                src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n                alt={weather.weather[0].description}\r\n                            \r\n                        />\r\n            <p>{weather.weather[0].description}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}